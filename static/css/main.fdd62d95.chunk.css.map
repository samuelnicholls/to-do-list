{"version":3,"sources":["main.fdd62d95.chunk.css","1-base/_normalisation.scss","4-components/_form.scss","4-components/_heading.scss","1-base/_colours.scss","0-core/_breakpoints.scss","1-base/_typopgraphy.scss","4-components/_input.scss","4-components/_item.scss","4-components/_list.scss"],"names":[],"mappings":"AAAA,yEAAyE,CCOzE,iBAGE,kCAAmC,CACnC,iCAAkC,CAGlC,kBAAmB,CACpB,KAGC,gBAAiB,CACjB,6BAA8B,CAC/B,KAGC,QAAS,CACV,KAGC,aAAc,CACf,GAGC,aAAc,CACd,cAAgB,CACjB,GAGC,sBAAuB,CACvB,QAAS,CACT,gBAAiB,CAClB,IAGC,iCAAmC,CACnC,aAAc,CACf,EAGC,4BAA6B,CAC9B,MAGC,YAAa,CACb,WAAY,CACb,YAGC,kBAAmB,CACnB,yBAA0B,CAC1B,wCAAA,CAAA,gCAAiC,CAClC,SAIC,kBAAmB,CACpB,cAKC,iCAAmC,CACnC,aAAc,CACf,MAGC,aAAc,CACf,QAIC,aAAc,CACd,aAAc,CACd,iBAAkB,CAClB,uBAAwB,CACzB,IAGC,aAAe,CAChB,IAGC,SAAW,CACZ,IAGC,iBAAkB,CACnB,sCAOC,mBAAoB,CACpB,cAAe,CACf,gBAAiB,CACjB,QAAS,CACV,aAIC,gBAAiB,CAClB,cAIC,mBAAoB,CACrB,gDAMC,yBAA0B,CAC3B,wHAMC,iBAAkB,CAClB,SAAU,CACX,4GAMC,6BAA8B,CAC/B,SAGC,0BAA8B,CAC/B,OAGC,qBAAsB,CACtB,aAAc,CACd,aAAc,CACd,cAAe,CACf,SAAU,CACV,kBAAmB,CACpB,SAGC,uBAAwB,CACzB,SAGC,aAAc,CACf,6BAIC,qBAAsB,CACtB,SAAU,CACX,kFAIC,WAAY,CACb,cAGC,4BAA6B,CAC7B,mBAAoB,CACrB,yCAGC,uBAAwB,CACzB,6BAGC,yBAA0B,CAC1B,YAAa,CACd,QAGC,aAAc,CACf,QAGC,iBAAkB,CAKnB,kBAGC,YAAa,CACd,OAGC,QAAS,CACV,QCzMC,YAAa,CACb,eAAgB,CAChB,aAAc,CACd,cAAe,CAChB,WCJC,qBCHa,CDIb,iBAAkB,CAClB,YAAa,CEoGT,yBFvGN,WAMI,YAAa,CAehB,CAZC,iBACE,UCXW,CDaT,gCGd8B,CHe9B,cAAU,CAEZ,QAAS,CEwFP,yBF9FJ,iBASI,cAAe,CAElB,CIpBH,SACE,gCDHkC,CCIlC,qBHJa,CGKb,UAAW,CACX,YAAa,CACd,2BCJC,YAAa,CACb,kBAAmB,CAElB,mCAGG,qBJTS,CIMZ,0CAMK,aAAc,CANnB,iCAWG,4BAA6B,CAC7B,aJhBQ,CIiBT,gBAID,qBJtBW,CIuBX,qBJxBW,CIyBX,cAAe,CACf,iBAAkB,CAClB,WAAY,CACZ,UAAW,CACX,iBAAkB,CAPnB,uBAUG,UAAW,CACX,4BJhCS,CIiCT,2BJjCS,CIkCT,uBAAwB,CACxB,iBAAkB,CAClB,OAAQ,CACR,SAAU,CACV,SAAU,CACV,WAAY,CACZ,YAAa,CACd,eAID,gBAAiB,CACjB,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,SAAU,CACV,WAAY,CACZ,cAAe,CAPhB,2CAWG,WAAY,CACZ,qBJtDa,CIuDb,iBAAkB,CAClB,KAAM,CACN,SAAU,CACV,SAAU,CACV,WAAY,CAjBf,sBAqBG,uBAAwB,CArB3B,qBAyBG,wBAAyB,CAC1B,cAKC,cAAU,CACV,gCF7E8B,CE+EjC,QC5ED,YAAa,CACb,iBAAa,CAAb,YAAa,CACb,aAAc,CACd,YAAa,CACb,eAAgB","file":"main.fdd62d95.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Poppins&display=swap);\n*,*:before,*:after{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;box-sizing:inherit}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:'monospace', monospace;font-size:1em}a{background-color:transparent}a img{outline:none;border:none}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:'monospace', monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type='button']:-moz-focusring,[type='reset']:-moz-focusring,[type='submit']:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type='checkbox'],[type='radio']{box-sizing:border-box;padding:0}[type='number']::-webkit-inner-spin-button,[type='number']::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}[type='search']::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}figure{margin:0}.c-form{display:flex;max-width:500px;margin:0 auto;padding:0 20px}.c-heading{background-color:#000;text-align:center;padding:10px}@media all and (min-width: 480px){.c-heading{padding:40px}}.c-heading__text{color:#fff;font-family:\"Poppins\",sans-serif;font-size:30px;margin:0}@media all and (min-width: 480px){.c-heading__text{font-size:40px}}.c-input{font-family:\"Poppins\",sans-serif;border:1px solid #000;width:100%;padding:10px}.c-item,.c-item--completed{display:flex;align-items:center}.c-item--completed .c-item__circle{background-color:#000}.c-item--completed .c-item__circle::before{display:block}.c-item--completed .c-item__text{text-decoration:line-through;color:dimgray}.c-item__circle{background-color:#fff;border:1px solid #000;cursor:pointer;position:relative;height:20px;width:10px;margin-right:20px}.c-item__circle::before{content:'';border-bottom:2px solid #fff;border-right:2px solid #fff;transform:rotate(45deg);position:absolute;top:2px;right:8px;width:5px;height:11px;display:none}.c-item__cross{margin-left:auto;width:22px;height:22px;position:relative;padding:0;border:none;cursor:pointer}.c-item__cross::before,.c-item__cross::after{content:' ';background-color:#333;position:absolute;top:0;left:15px;width:2px;height:22px}.c-item__cross::before{transform:rotate(45deg)}.c-item__cross::after{transform:rotate(-45deg)}.c-item__text{font-size:18px;font-family:\"Poppins\",sans-serif}.c-list{display:grid;grid-row-gap:10px;row-gap:10px;margin:0 auto;padding:20px;max-width:500px}\n\n","/// HTML normalisation for browsers (not project specific)\n/// I've stripped out the comments, so they aren't compiled into CSS\n/// Any project specific normalisation rules should be added as scaffolding\n/// There are some additional normalisation rules, which seem to be standard in all projects\n///\n/// @author necolas\n/// @source https://github.com/necolas/normalize.css/\n*,\n*:before,\n*:after {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-box-sizing: inherit;\n  -moz-box-sizing: inherit;\n  box-sizing: inherit;\n}\n\nhtml {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\nmain {\n  display: block;\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\npre {\n  font-family: 'monospace', monospace;\n  font-size: 1em;\n}\n\na {\n  background-color: transparent;\n}\n\na img {\n  outline: none;\n  border: none;\n}\n\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\n  font-family: 'monospace', monospace;\n  font-size: 1em;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\nimg {\n  border-style: none;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\ntextarea {\n  overflow: auto;\n}\n\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\ndetails {\n  display: block;\n}\n\nsummary {\n  display: list-item;\n}\n\ntemplate {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\nfigure {\n  margin: 0;\n}\n","$this: 'c-form' !global;\n\n.#{$this} {\n  display: flex;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 0 20px;\n}","$this: 'c-heading' !global;\n\n.#{$this} {\n  background-color: $black;\n  text-align: center;\n  padding: 10px;\n\n  @include breakpoint('>=', 'ms') {\n    padding: 40px;\n  }\n\n  &__text {\n    color: $white;\n    font: {\n      family: $font-regular;\n      size: 30px;\n    }\n    margin: 0;\n\n    @include breakpoint('>=', 'ms') {\n      font-size: 40px;\n    }\n  }\n}\n","$black: #000000;\n$white: #ffffff;\n$grey: #696969;\n$dark-grey: #333333;\n","/// Map of device widths used for media queries in this project\n///\n/// @author Samuel Nicholls\n/// @since 1.0.0\n///\n/// @access private\n/// @group breakpoints\n/// @see breakpoint()\n///\n/// @type Map\n/// @prop {string} device.key - key to return value\n/// @prop {int} device.value - pixel width of device\n\n@function map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n\n  @return $map;\n}\n\n$breakpoint-map: (\n  'ms': 480,\n  // mobile small (portrait)\n    'ml': 600,\n  // mobile large (landscape)\n    'ts': 720,\n  // tablet small (portrait)\n    'tl': 960,\n  // tablet large (landscape)\n    'ls': 1024,\n  // laptop small\n    'll': 1200,\n  // laptop large\n    'lxl': 1366,\n  // laptop extra large\n    'ds': 1400,\n  // desktop small\n    'dm': 1500,\n  // deskptop medium\n    'dl': 1800,\n  // desktop large\n    'dxl': 1920,\n  // desktop extra large\n) !default;\n\n/// Unit of measurement for media queries\n///\n/// @author Samuel Nicholls\n/// @since 1.0.0\n///\n/// @access private\n/// @group breakpoints\n/// @see breakpoint()\n///\n/// @type String\n$breakpoint-unit: 'px';\n\n/// Mixin to standardise media queries declaration\n///\n/// @author Samuel Nicholls\n/// @since 1.0.0\n///\n/// @access public\n/// @group breakpoints\n///\n/// @param {String} $operation - Apply a combination of min and max width\n/// @param {String} $breakpoint-key - Specify viewport size to target\n/// @param {String} $media-type - Specify device type, or just do it for all\n///\n/// @example scss - Usage\n///\n/// .foo {\n///   padding: 20px;\n///\n///   @include breakpoint('>=', 'ms') {\n///     padding: 30px;\n///   }\n/// }\n///\n/// @example css - CSS output\n///\n/// .foo {\n///   padding: 20px;\n/// }\n///\n/// @media all and (min-width: 480px) {\n///   .foo {\n///     padding: 30px;\n///   }\n/// }\n@mixin breakpoint($operation, $breakpoint-key, $media-type: 'all') {\n  @if (map-has-key($breakpoint-map, $breakpoint-key)) {\n    $query: map-deep-get($breakpoint-map, $breakpoint-key);\n    $query-value: $query + $breakpoint-unit;\n\n    // Basic queries for mobile or desktop first approaches\n\n    @if $operation == '<=' {\n      @media #{$media-type} and (max-width: $query-value) {\n        @content;\n      }\n    }\n\n    @if $operation == '>=' {\n      @media #{$media-type} and (min-width: $query-value) {\n        @content;\n      }\n    }\n\n    // Operations without having to be equal.\n\n    @if $operation == '<' {\n      @media #{$media-type} and (max-width: ($query - 1) + $breakpoint-unit) {\n        @content;\n      }\n    }\n\n    @if $operation == '>' {\n      @media #{$media-type} and (min-width: ($query + 1) + $breakpoint-unit) {\n        @content;\n      }\n    }\n  }\n}\n","$font-regular: 'Poppins', sans-serif;\n","$this: 'c-input' !global;\n\n.#{$this} {\n  font-family: $font-regular;\n  border: 1px solid $black;\n  width: 100%;\n  padding: 10px;\n}\n","$this: 'c-item' !global;\n\n.#{$this} {\n  display: flex;\n  align-items: center;\n\n  &--completed {\n    @extend .#{$this};\n    .#{$this}__circle {\n      background-color: $black;\n\n      &::before {\n        display: block;\n      }\n    }\n\n    .#{$this}__text {\n      text-decoration: line-through;\n      color: $grey;\n    }\n  }\n\n  &__circle {\n    background-color: $white;\n    border: 1px solid $black;\n    cursor: pointer;\n    position: relative;\n    height: 20px;\n    width: 10px;\n    margin-right: 20px;\n\n    &::before {\n      content: '';\n      border-bottom: 2px solid $white;\n      border-right: 2px solid $white;\n      transform: rotate(45deg);\n      position: absolute;\n      top: 2px;\n      right: 8px;\n      width: 5px;\n      height: 11px;\n      display: none;\n    }\n  }\n\n  &__cross {\n    margin-left: auto;\n    width: 22px;\n    height: 22px;\n    position: relative;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      content: ' ';\n      background-color: $dark-grey;\n      position: absolute;\n      top: 0;\n      left: 15px;\n      width: 2px;\n      height: 22px;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n\n  &__text {\n    font: {\n      size: 18px;\n      family: $font-regular;\n    }\n  }\n}\n","$this: 'c-list' !global;\n\n.#{$this} {\n  display: grid;\n  row-gap: 10px;\n  margin: 0 auto;\n  padding: 20px;\n  max-width: 500px;\n}\n"]}